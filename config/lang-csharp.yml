name: c#
visible_name: C# (mono)
version: "4.0"
compiler_profile: straitjacket/compiler/csharp
apparmor_profile: straitjacket/compiled/csharp
filename: source.cs
docker_image: straitjacket-csharp

file_extensions:
  - cs
  - c#

tests:
  template:
    source: |
      public class Template {
        public static void Main() {
          string inputLine;

          while ((inputLine = System.Console.ReadLine()) != null) {
            System.Console.WriteLine(Process(inputLine));
          }
        }

        private static string Process(string line) {
          // Process each line of input here
          return line;
        }
      }
    stdin:  "1\n2\n3\n"
    stdout: "\\A1\n2\n3\n\\z"
    stderr: "\\A\\z"
    exitstatus: 0

  simple:
    source: |
      public class Template {
        public static void Main() {
          string inputLine;
          System.Collections.ArrayList outputValues = new System.Collections.ArrayList();

          while ((inputLine = System.Console.ReadLine()) != null) {
            outputValues.Add(System.Convert.ToInt32(inputLine) * 2);
          }

          foreach (int outputValue in outputValues) {
            System.Console.WriteLine(outputValue);
          }
        }
      }
    stdin:  "1\n2\n3\n"
    stdout: "\\A2\n4\n6\n\\z"
    stderr: "\\A\\z"
    exitstatus: 0

  rlimit:
    source: |
      public class TestRLimit {
        public static void Main() {
          int[] numbers = new int[1073741824];
        }
      }
    stdout:
    stderr: "System.OutOfMemoryException: Out of memory"
    exitstatus: 1

  apparmor:
    source: |
      using System; using System.IO;
      public class TestAppArmor {
        public static void Main() {
          TextReader tr = new StreamReader("/etc/passwd");
          Console.WriteLine(tr.ReadLine());
          tr.Close();
        }
      }
    stdout:
    stderr: Access to the path "/etc/passwd" is denied.
    exitstatus: 1
