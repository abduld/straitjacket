name: java
visible_name: Java 7 (OpenJDK)
version: "1.7.0_79"
compiler_profile: straitjacket/compiler/java
apparmor_profile: straitjacket/compiled/java
filename: Main.java
docker_image: straitjacket-java

file_extensions:
  - java

tests:
  simple:
    source: |
      import java.io.BufferedReader;
      import java.io.InputStreamReader;
      import java.io.IOException;
      import java.util.ArrayList;

      public class Main {
        public static void main(String[] args) {
          BufferedReader bi = new BufferedReader(new InputStreamReader(System.in));
          String line;
          ArrayList<String> lines = new ArrayList<String>();

          try {
            while ((line = bi.readLine()) != null) {
              lines.add(line);
            }
          } catch(IOException e) { }

          for (String l : lines) {
            System.out.println(processLine(l));
          }
        }

        static String processLine(String line) {
          int number = Integer.parseInt(line);
          return Integer.toString(number * 2);
        }
      }
    stdin:  "1\n2\n3\n"
    stdout: "\\A2\n4\n6\n\\z"
    stderr:
    exitstatus: 0

  rlimit:
    source: |
      public class Main {
       public static void main(String[] args) {
         int[] data = new int[1073741824];
       }
      }
    stdout: "\\A\\z"
    stderr: "Exception in thread \"main\" java.lang.OutOfMemoryError"
    exitstatus: 1

  apparmor:
    source: |
      import java.io.*;
      public class Main {
       public static void main(String[] args) {
         try {
           DataInputStream in = new DataInputStream(
                                   new FileInputStream("/etc/hosts"));
           BufferedReader br = new BufferedReader(new InputStreamReader(in));
           String line;
           while ((line = br.readLine()) != null) {
             System.out.println(line);
           }
           in.close();
         } catch (Exception e) {
           System.err.println("SJ Error: " + e.getMessage());
         }
       }
      }
    stdout: "\\A\\z"
    stderr: 'SJ Error: /etc/hosts \(Permission denied\)'
    exitstatus: 0
