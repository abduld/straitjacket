name: go
visible_name: Go 1.4.2
version: "1.4.2"
compiler_profile: straitjacket/compiler/go
apparmor_profile: straitjacket/compiled/go
filename: source.go
docker_image: straitjacket-go

tests:
  simple:
    source: |
      package main
      import fmt "fmt"
      func main() {
        fmt.Printf("Hello from Go\n")
      }
    stdout: "\\AHello from Go\n\\z"
    stderr: "\\A\\z"
    exitstatus: 0

  rlimit:
    source: |
      package main
      func main() {
        data := new([107374182]int)
        data[1] = 2
      }
    stdout: "\\A\\z"
    stderr: out of memory
    exitstatus: 2

  apparmor:
    source: |
       package main
       import (
          "os"
          "fmt"
       )
       func main() {
          file, err := os.Open("/etc/hosts")
          if err != nil {
              fmt.Printf("error: %s", err)
              return
          }
          bytes := make([]byte, 4096)
          size, err := file.Read(bytes)
          if err != nil {
              fmt.Printf("error: %s", err)
          }
          fmt.Printf("read: %s", bytes[:size])
          file.Close()
       }
    stdout: "\\Aerror: open /etc/hosts: permission denied\\z"
    stderr: "\\A\\z"
    exitstatus: 0
