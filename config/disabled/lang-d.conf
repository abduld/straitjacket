[general]
name = D
version_switch = --help
execution_profile = CompilerProfile
binary = dmd
compilation_command = lambda source, object: ["dmd", "-of%%s" %% object, source]
filename = source.d
apparmor_profile = straitjacket/compiler/dmd

[test-simple]
source = import std.stdio;
         int main() {
           std.stdio.writefln("Hello from D");
           return 0;
         }
stdout = \AHello from D\n\Z
stderr = \A\Z
exitstatus = 0
error =

[test-apparmor]
source = import std.stdio;
         import std.file;
         int main(char[][] args) {
          std.stdio.writefln("%%s", cast(char[])read("/etc/hosts"));
          return 0;
         }
stdout = \A\Z
stderr = /etc/hosts: Permission denied
exitstatus = 1
error = runtime_error

[test-rlimit]
source = import std.stdio;
         int main() {
          char[] lotsomem = new char[1073741824];
          return 0;
         }
stdout = \A\Z
stderr = core.exception.OutOfMemoryError
exitstatus = 1
error = runtime_error
