name: rust
visible_name: Rust 1.1.0
version: "1.1.0"
compiler_profile: straitjacket/compiler/rust
apparmor_profile: straitjacket/compiled/rust
filename: main.rs
docker_image: straitjacket-rust

file_extensions:
  - rs

tests:
  template:
    source: |
      use std::io;
      use std::io::prelude::*;

      fn process(line : String) -> String {
        // Process each line of input here
        return line;
      }

      fn main() {
        let stdin = io::stdin();
        let mut lines = vec![];
        let mut processed = vec![];

        for line in stdin.lock().lines() {
          lines.push(line.unwrap());
        }

        for line in lines {
          processed.push(process(line));
        }

        for line in processed {
          println!("{}", line);
        }
      }
    stdin:  "1\n2\n3\n"
    stdout: "\\A1\n2\n3\n\\z"
    stderr: "\\A\\z"
    exitstatus: 0

  simple:
    source: |
      use std::io;
      use std::io::prelude::*;

      fn process(line : String) -> String {
        let num = line.parse::<i32>().unwrap() * 2;
        return num.to_string();
      }

      fn main() {
        let stdin = io::stdin();
        let mut lines = vec![];
        let mut processed = vec![];

        for line in stdin.lock().lines() {
          lines.push(line.unwrap());
        }

        for line in lines {
          processed.push(process(line));
        }

        for line in processed {
          println!("{}", line);
        }
      }
    stdin:  "1\n2\n3\n"
    stdout: "\\A2\n4\n6\n\\z"
    stderr: "\\A\\z"
    exitstatus: 0

  rlimit:
    source: |
      use std::iter::repeat;
      fn main() {
          const SIZE: usize = 1073741824;
          let v: Vec<_> = repeat(10.0).take(SIZE).collect();
      }
    stdout:
    stderr: Illegal instruction
    exitstatus: 132

  apparmor:
    source: |
      use std::fs::File;
      fn main() {
        let file = match File::open("/etc/passwd") {
          Ok(file) => println!("Read it!"),
          Err(..)  => panic!("Access denied"),
        };
      }
    stdout: "\\A\\z"
    stderr: Access denied
    exitstatus: 101
