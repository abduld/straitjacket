// Automatically generated by MockGen. DO NOT EDIT!
// Source: straitjacket/handlers (interfaces: Engine)

package handlers

import (
	engine "straitjacket/engine"

	gomock "github.com/golang/mock/gomock"
)

// Mock of Engine interface
type MockEngine struct {
	ctrl     *gomock.Controller
	recorder *_MockEngineRecorder
}

// Recorder for MockEngine (not exported)
type _MockEngineRecorder struct {
	mock *MockEngine
}

func NewMockEngine(ctrl *gomock.Controller) *MockEngine {
	mock := &MockEngine{ctrl: ctrl}
	mock.recorder = &_MockEngineRecorder{mock}
	return mock
}

func (_m *MockEngine) EXPECT() *_MockEngineRecorder {
	return _m.recorder
}

func (_m *MockEngine) FindLanguage(_param0 string) *engine.Language {
	ret := _m.ctrl.Call(_m, "FindLanguage", _param0)
	ret0, _ := ret[0].(*engine.Language)
	return ret0
}

func (_mr *_MockEngineRecorder) FindLanguage(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "FindLanguage", arg0)
}

func (_m *MockEngine) Languages() []*engine.Language {
	ret := _m.ctrl.Call(_m, "Languages")
	ret0, _ := ret[0].([]*engine.Language)
	return ret0
}

func (_mr *_MockEngineRecorder) Languages() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Languages")
}
